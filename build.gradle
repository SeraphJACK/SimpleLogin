buildscript {
    repositories {
        jcenter() {
            url = 'https://jcenter.bintray.com/'
        }
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url 'https://repository.jboss.org/nexus/content/groups/public'
        }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }
}

allprojects {
    repositories {
        jcenter() {
            url = 'https://jcenter.bintray.com/'
        }
        maven {
            url 'https://repository.jboss.org/nexus/content/groups/public'
        }
        mavenCentral()
    }
}

apply plugin: 'idea'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

version = "0.3.5-beta"
group = "top.seraphjack"
archivesBaseName = "simplelogin"

if (System.getenv().BUILD_NUMBER != null) {
    version += "-build${System.getenv().BUILD_NUMBER}"
}

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = "run"

    mappings = "${mapping_version}"

    replace "@VERSION_INJECT@", project.version
}

configurations {
    compile.extendsFrom shadow
}

dependencies {
    testCompile "junit:junit:4.12"
    shadow "org.mindrot:jbcrypt:0.4"
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier = ""

    relocate "org.mindrot", "top.seraphjack.repack.org.mindrot"
}

jar {
    classifier = "withoutlibs"
}

reobf {
    shadowJar { mappingType = 'SEARGE' }
}

tasks.reobfShadowJar.mustRunAfter shadowJar

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
